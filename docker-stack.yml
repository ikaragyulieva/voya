version: "3.12"

services:
  nginx:
    image: dromovoya/my-nginx:latest
    # Traefik labels go on the Nginx container since Traefik will forward
    # requests from the outside to Nginx
    labels:
      # Expose this container to Traefik
      - "traefik.enable=true"
      # Route requests for your domain
      - "traefik.http.routers.voya.rule=Host(`voya.dromo.org`)"
      # Use the secure (HTTPS) entrypoint
      - "traefik.http.routers.voya.entrypoints=websecure"
      # Use the Let's Encrypt resolver to obtain TLS certificates
      - "traefik.http.routers.voya.tls.certresolver=myresolver"
      # Nginx listens on 80 internally, so route traffic to port 80 of Nginx
      - "traefik.http.services.voya.loadbalancer.server.port=80"
    volumes:
#      - ./etc/nginx/conf.d:/etc/nginx/conf.d:ro
      - static_data:/static
      - media_data:/media
    depends_on:
      - web
    networks:
      - dokploy-network
    deploy:
      replicas: 1


  web:
    image: dromovoya/voyaapp:latest
    env_file: .env  # Load secrets from .env
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db
      - DB_PORT=5432
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_USE_TLS=${EMAIL_USE_TLS}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - CLOUD_NAME=${CLOUD_NAME}
      - API_KEY=${API_KEY}
      - API_SECRET=${API_SECRET}
      - CLOUDINARY_URL=${CLOUDINARY_URL}
    # Share a named volume for static so Nginx can see it too
    volumes:
      - static_data:/voya/staticfiles
      - media_data:/voya/media
#    ports:
#      - "8000:8000"
#    depends_on:
#      - db
    networks:
      dokploy-network: {}
#        aliases:
#          - web
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 30s


  db:
    image: postgres:17
#    container_name: voya_db
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - voya_my-postgres-data:/var/lib/postgresql/data
    networks:
      - dokploy-network
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 12
      start_period: 10s
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 30s

networks:
  dokploy-network:
    external: true

volumes:
  voya_my-postgres-data:
  static_data:
  media_data:
